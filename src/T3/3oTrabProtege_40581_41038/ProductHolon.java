package 3oTrabProtege;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: ProductHolon <br>
 * @version generated on Wed Dec 28 18:45:57 GMT 2016 by dmrg
 */

public interface ProductHolon extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ContainsComplex
     */
     
    /**
     * Gets all property values for the ContainsComplex property.<p>
     * 
     * @returns a collection of values for the ContainsComplex property.
     */
    Collection<? extends ComplexTaskHolon> getContainsComplex();

    /**
     * Checks if the class has a ContainsComplex property value.<p>
     * 
     * @return true if there is a ContainsComplex property value.
     */
    boolean hasContainsComplex();

    /**
     * Adds a ContainsComplex property value.<p>
     * 
     * @param newContainsComplex the ContainsComplex property value to be added
     */
    void addContainsComplex(ComplexTaskHolon newContainsComplex);

    /**
     * Removes a ContainsComplex property value.<p>
     * 
     * @param oldContainsComplex the ContainsComplex property value to be removed.
     */
    void removeContainsComplex(ComplexTaskHolon oldContainsComplex);


    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ContainsSimple
     */
     
    /**
     * Gets all property values for the ContainsSimple property.<p>
     * 
     * @returns a collection of values for the ContainsSimple property.
     */
    Collection<? extends SimpleTaskHolon> getContainsSimple();

    /**
     * Checks if the class has a ContainsSimple property value.<p>
     * 
     * @return true if there is a ContainsSimple property value.
     */
    boolean hasContainsSimple();

    /**
     * Adds a ContainsSimple property value.<p>
     * 
     * @param newContainsSimple the ContainsSimple property value to be added
     */
    void addContainsSimple(SimpleTaskHolon newContainsSimple);

    /**
     * Removes a ContainsSimple property value.<p>
     * 
     * @param oldContainsSimple the ContainsSimple property value to be removed.
     */
    void removeContainsSimple(SimpleTaskHolon oldContainsSimple);


    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ID
     */
     
    /**
     * Gets all property values for the ID property.<p>
     * 
     * @returns a collection of values for the ID property.
     */
    Collection<? extends String> getID();

    /**
     * Checks if the class has a ID property value.<p>
     * 
     * @return true if there is a ID property value.
     */
    boolean hasID();

    /**
     * Adds a ID property value.<p>
     * 
     * @param newID the ID property value to be added
     */
    void addID(String newID);

    /**
     * Removes a ID property value.<p>
     * 
     * @param oldID the ID property value to be removed.
     */
    void removeID(String oldID);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Name
     */
     
    /**
     * Gets all property values for the Name property.<p>
     * 
     * @returns a collection of values for the Name property.
     */
    Collection<? extends String> getName();

    /**
     * Checks if the class has a Name property value.<p>
     * 
     * @return true if there is a Name property value.
     */
    boolean hasName();

    /**
     * Adds a Name property value.<p>
     * 
     * @param newName the Name property value to be added
     */
    void addName(String newName);

    /**
     * Removes a Name property value.<p>
     * 
     * @param oldName the Name property value to be removed.
     */
    void removeName(String oldName);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Tasks
     */
     
    /**
     * Gets all property values for the Tasks property.<p>
     * 
     * @returns a collection of values for the Tasks property.
     */
    Collection<? extends String> getTasks();

    /**
     * Checks if the class has a Tasks property value.<p>
     * 
     * @return true if there is a Tasks property value.
     */
    boolean hasTasks();

    /**
     * Adds a Tasks property value.<p>
     * 
     * @param newTasks the Tasks property value to be added
     */
    void addTasks(String newTasks);

    /**
     * Removes a Tasks property value.<p>
     * 
     * @param oldTasks the Tasks property value to be removed.
     */
    void removeTasks(String oldTasks);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
