package 3oTrabProtege.impl;

import 3oTrabProtege.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultSimpleTaskHolon <br>
 * @version generated on Wed Dec 28 18:45:57 GMT 2016 by dmrg
 */
public class DefaultSimpleTaskHolon extends WrappedIndividualImpl implements SimpleTaskHolon {

    public DefaultSimpleTaskHolon(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#AnswerCTH
     */
     
    public Collection<? extends ComplexTaskHolon> getAnswerCTH() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ANSWERCTH,
                                               DefaultComplexTaskHolon.class);
    }

    public boolean hasAnswerCTH() {
	   return !getAnswerCTH().isEmpty();
    }

    public void addAnswerCTH(ComplexTaskHolon newAnswerCTH) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ANSWERCTH,
                                       newAnswerCTH);
    }

    public void removeAnswerCTH(ComplexTaskHolon oldAnswerCTH) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ANSWERCTH,
                                          oldAnswerCTH);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Asks
     */
     
    public Collection<? extends SupervisorHolon> getAsks() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ASKS,
                                               DefaultSupervisorHolon.class);
    }

    public boolean hasAsks() {
	   return !getAsks().isEmpty();
    }

    public void addAsks(SupervisorHolon newAsks) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ASKS,
                                       newAsks);
    }

    public void removeAsks(SupervisorHolon oldAsks) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ASKS,
                                          oldAsks);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#STHAnswerPH
     */
     
    public Collection<? extends ProductHolon> getSTHAnswerPH() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_STHANSWERPH,
                                               DefaultProductHolon.class);
    }

    public boolean hasSTHAnswerPH() {
	   return !getSTHAnswerPH().isEmpty();
    }

    public void addSTHAnswerPH(ProductHolon newSTHAnswerPH) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_STHANSWERPH,
                                       newSTHAnswerPH);
    }

    public void removeSTHAnswerPH(ProductHolon oldSTHAnswerPH) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_STHANSWERPH,
                                          oldSTHAnswerPH);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#HardwareNeeded
     */
     
    public Collection<? extends String> getHardwareNeeded() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HARDWARENEEDED, String.class);
    }

    public boolean hasHardwareNeeded() {
		return !getHardwareNeeded().isEmpty();
    }

    public void addHardwareNeeded(String newHardwareNeeded) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HARDWARENEEDED, newHardwareNeeded);
    }

    public void removeHardwareNeeded(String oldHardwareNeeded) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HARDWARENEEDED, oldHardwareNeeded);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ID
     */
     
    public Collection<? extends String> getID() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, String.class);
    }

    public boolean hasID() {
		return !getID().isEmpty();
    }

    public void addID(String newID) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, newID);
    }

    public void removeID(String oldID) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, oldID);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Name
     */
     
    public Collection<? extends String> getName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, String.class);
    }

    public boolean hasName() {
		return !getName().isEmpty();
    }

    public void addName(String newName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, newName);
    }

    public void removeName(String oldName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, oldName);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Supervisors
     */
     
    public Collection<? extends String> getSupervisors() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SUPERVISORS, String.class);
    }

    public boolean hasSupervisors() {
		return !getSupervisors().isEmpty();
    }

    public void addSupervisors(String newSupervisors) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SUPERVISORS, newSupervisors);
    }

    public void removeSupervisors(String oldSupervisors) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SUPERVISORS, oldSupervisors);
    }


}
