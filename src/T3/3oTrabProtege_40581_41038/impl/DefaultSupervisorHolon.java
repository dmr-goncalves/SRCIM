package 3oTrabProtege.impl;

import 3oTrabProtege.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultSupervisorHolon <br>
 * @version generated on Wed Dec 28 18:45:57 GMT 2016 by dmrg
 */
public class DefaultSupervisorHolon extends WrappedIndividualImpl implements SupervisorHolon {

    public DefaultSupervisorHolon(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#AnswerSTH
     */
     
    public Collection<? extends SimpleTaskHolon> getAnswerSTH() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ANSWERSTH,
                                               DefaultSimpleTaskHolon.class);
    }

    public boolean hasAnswerSTH() {
	   return !getAnswerSTH().isEmpty();
    }

    public void addAnswerSTH(SimpleTaskHolon newAnswerSTH) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ANSWERSTH,
                                       newAnswerSTH);
    }

    public void removeAnswerSTH(SimpleTaskHolon oldAnswerSTH) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ANSWERSTH,
                                          oldAnswerSTH);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Executes
     */
     
    public Collection<? extends OperationalHolon> getExecutes() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_EXECUTES,
                                               DefaultOperationalHolon.class);
    }

    public boolean hasExecutes() {
	   return !getExecutes().isEmpty();
    }

    public void addExecutes(OperationalHolon newExecutes) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_EXECUTES,
                                       newExecutes);
    }

    public void removeExecutes(OperationalHolon oldExecutes) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_EXECUTES,
                                          oldExecutes);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ID
     */
     
    public Collection<? extends String> getID() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, String.class);
    }

    public boolean hasID() {
		return !getID().isEmpty();
    }

    public void addID(String newID) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, newID);
    }

    public void removeID(String oldID) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, oldID);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Name
     */
     
    public Collection<? extends String> getName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, String.class);
    }

    public boolean hasName() {
		return !getName().isEmpty();
    }

    public void addName(String newName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, newName);
    }

    public void removeName(String oldName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_NAME, oldName);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Operationals
     */
     
    public Collection<? extends String> getOperationals() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OPERATIONALS, String.class);
    }

    public boolean hasOperationals() {
		return !getOperationals().isEmpty();
    }

    public void addOperationals(String newOperationals) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OPERATIONALS, newOperationals);
    }

    public void removeOperationals(String oldOperationals) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OPERATIONALS, oldOperationals);
    }


}
