package com.issiaa2016.semanticmodelimpl;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Resource <br>
 * @version generated on Thu Oct 27 23:15:00 BST 2016 by dmrgo
 */

public interface Resource extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ExecutesComplex
     */
     
    /**
     * Gets all property values for the ExecutesComplex property.<p>
     * 
     * @returns a collection of values for the ExecutesComplex property.
     */
    Collection<? extends ComplexSkill> getExecutesComplex();

    /**
     * Checks if the class has a ExecutesComplex property value.<p>
     * 
     * @return true if there is a ExecutesComplex property value.
     */
    boolean hasExecutesComplex();

    /**
     * Adds a ExecutesComplex property value.<p>
     * 
     * @param newExecutesComplex the ExecutesComplex property value to be added
     */
    void addExecutesComplex(ComplexSkill newExecutesComplex);

    /**
     * Removes a ExecutesComplex property value.<p>
     * 
     * @param oldExecutesComplex the ExecutesComplex property value to be removed.
     */
    void removeExecutesComplex(ComplexSkill oldExecutesComplex);


    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ExecutesSimple
     */
     
    /**
     * Gets all property values for the ExecutesSimple property.<p>
     * 
     * @returns a collection of values for the ExecutesSimple property.
     */
    Collection<? extends SimpleSkill> getExecutesSimple();

    /**
     * Checks if the class has a ExecutesSimple property value.<p>
     * 
     * @return true if there is a ExecutesSimple property value.
     */
    boolean hasExecutesSimple();

    /**
     * Adds a ExecutesSimple property value.<p>
     * 
     * @param newExecutesSimple the ExecutesSimple property value to be added
     */
    void addExecutesSimple(SimpleSkill newExecutesSimple);

    /**
     * Removes a ExecutesSimple property value.<p>
     * 
     * @param oldExecutesSimple the ExecutesSimple property value to be removed.
     */
    void removeExecutesSimple(SimpleSkill oldExecutesSimple);


    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#incorporate
     */
     
    /**
     * Gets all property values for the incorporate property.<p>
     * 
     * @returns a collection of values for the incorporate property.
     */
    Collection<? extends Disturbance> getIncorporate();

    /**
     * Checks if the class has a incorporate property value.<p>
     * 
     * @return true if there is a incorporate property value.
     */
    boolean hasIncorporate();

    /**
     * Adds a incorporate property value.<p>
     * 
     * @param newIncorporate the incorporate property value to be added
     */
    void addIncorporate(Disturbance newIncorporate);

    /**
     * Removes a incorporate property value.<p>
     * 
     * @param oldIncorporate the incorporate property value to be removed.
     */
    void removeIncorporate(Disturbance oldIncorporate);


    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ComplexSkills
     */
     
    /**
     * Gets all property values for the ComplexSkills property.<p>
     * 
     * @returns a collection of values for the ComplexSkills property.
     */
    Collection<? extends Object> getComplexSkills();

    /**
     * Checks if the class has a ComplexSkills property value.<p>
     * 
     * @return true if there is a ComplexSkills property value.
     */
    boolean hasComplexSkills();

    /**
     * Adds a ComplexSkills property value.<p>
     * 
     * @param newComplexSkills the ComplexSkills property value to be added
     */
    void addComplexSkills(Object newComplexSkills);

    /**
     * Removes a ComplexSkills property value.<p>
     * 
     * @param oldComplexSkills the ComplexSkills property value to be removed.
     */
    void removeComplexSkills(Object oldComplexSkills);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Description
     */
     
    /**
     * Gets all property values for the Description property.<p>
     * 
     * @returns a collection of values for the Description property.
     */
    Collection<? extends String> getDescription();

    /**
     * Checks if the class has a Description property value.<p>
     * 
     * @return true if there is a Description property value.
     */
    boolean hasDescription();

    /**
     * Adds a Description property value.<p>
     * 
     * @param newDescription the Description property value to be added
     */
    void addDescription(String newDescription);

    /**
     * Removes a Description property value.<p>
     * 
     * @param oldDescription the Description property value to be removed.
     */
    void removeDescription(String oldDescription);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Disturbance
     */
     
    /**
     * Gets all property values for the Disturbance property.<p>
     * 
     * @returns a collection of values for the Disturbance property.
     */
    Collection<? extends Object> getDisturbance();

    /**
     * Checks if the class has a Disturbance property value.<p>
     * 
     * @return true if there is a Disturbance property value.
     */
    boolean hasDisturbance();

    /**
     * Adds a Disturbance property value.<p>
     * 
     * @param newDisturbance the Disturbance property value to be added
     */
    void addDisturbance(Object newDisturbance);

    /**
     * Removes a Disturbance property value.<p>
     * 
     * @param oldDisturbance the Disturbance property value to be removed.
     */
    void removeDisturbance(Object oldDisturbance);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Friendly_Name
     */
     
    /**
     * Gets all property values for the Friendly_Name property.<p>
     * 
     * @returns a collection of values for the Friendly_Name property.
     */
    Collection<? extends String> getFriendly_Name();

    /**
     * Checks if the class has a Friendly_Name property value.<p>
     * 
     * @return true if there is a Friendly_Name property value.
     */
    boolean hasFriendly_Name();

    /**
     * Adds a Friendly_Name property value.<p>
     * 
     * @param newFriendly_Name the Friendly_Name property value to be added
     */
    void addFriendly_Name(String newFriendly_Name);

    /**
     * Removes a Friendly_Name property value.<p>
     * 
     * @param oldFriendly_Name the Friendly_Name property value to be removed.
     */
    void removeFriendly_Name(String oldFriendly_Name);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#ID
     */
     
    /**
     * Gets all property values for the ID property.<p>
     * 
     * @returns a collection of values for the ID property.
     */
    Collection<? extends String> getID();

    /**
     * Checks if the class has a ID property value.<p>
     * 
     * @return true if there is a ID property value.
     */
    boolean hasID();

    /**
     * Adds a ID property value.<p>
     * 
     * @param newID the ID property value to be added
     */
    void addID(String newID);

    /**
     * Removes a ID property value.<p>
     * 
     * @param oldID the ID property value to be removed.
     */
    void removeID(String oldID);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#Manufacturer
     */
     
    /**
     * Gets all property values for the Manufacturer property.<p>
     * 
     * @returns a collection of values for the Manufacturer property.
     */
    Collection<? extends String> getManufacturer();

    /**
     * Checks if the class has a Manufacturer property value.<p>
     * 
     * @return true if there is a Manufacturer property value.
     */
    boolean hasManufacturer();

    /**
     * Adds a Manufacturer property value.<p>
     * 
     * @param newManufacturer the Manufacturer property value to be added
     */
    void addManufacturer(String newManufacturer);

    /**
     * Removes a Manufacturer property value.<p>
     * 
     * @param oldManufacturer the Manufacturer property value to be removed.
     */
    void removeManufacturer(String oldManufacturer);



    /* ***************************************************
     * Property http://www.semanticweb.org/dmrgo/ontologies/2016/9/finalOntology#SimpleSkills
     */
     
    /**
     * Gets all property values for the SimpleSkills property.<p>
     * 
     * @returns a collection of values for the SimpleSkills property.
     */
    Collection<? extends Object> getSimpleSkills();

    /**
     * Checks if the class has a SimpleSkills property value.<p>
     * 
     * @return true if there is a SimpleSkills property value.
     */
    boolean hasSimpleSkills();

    /**
     * Adds a SimpleSkills property value.<p>
     * 
     * @param newSimpleSkills the SimpleSkills property value to be added
     */
    void addSimpleSkills(Object newSimpleSkills);

    /**
     * Removes a SimpleSkills property value.<p>
     * 
     * @param oldSimpleSkills the SimpleSkills property value to be removed.
     */
    void removeSimpleSkills(Object oldSimpleSkills);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
